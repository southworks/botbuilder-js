# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

trigger:
    - master
    
pr:
    - master

pool:
  vmImage: 'vs2017-win2016'

variables:
  TestBotName: 'FuncTestBotWin'

steps:

- task: AzureResourceGroupDeployment@2
  displayName: 'Create Bot Resource Group'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    resourceGroupName: '$(TestBotName)'
    location: 'Central US'
    csmFile: 'libraries/functional-tests/functionaltestbot/template/windows/template.json'
    overrideParameters: '-serverFarmName "$(TestBotName)" -createServerFarm true -serverFarmLocation "Central US" -serverFarmSku {"name":"S1","tier":"Standard","size":"S1","family":"S","capacity":1} -siteName "$(TestBotName)" -kind "sdk" -siteLocation "Central US" -appId "$(TestBotAppId)" -appSecret "$(TestBotAppSecret)" -zipUrl "https://bot-framework.azureedge.net/static/59409-2a1ed9f3ee/bot-packages/v1.3.18/node.js-abs-webapp-v4_echobot.zip" -botId "$(TestBotName)" -sku "S1" -endpoint ""'

- task: AzureCLI@1
  displayName: 'Prepare Bot to Deploy'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: |
     call az bot prepare-deploy --code-dir "$(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot" --lang Javascript
     
- powershell: |
   move-item -path $(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot/deployment-scripts/windows/* -destination $(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot
   
   $DirToCompress = "$(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot"
   $DirtoExclude =@("node_modules", "template", "deployment-scripts")
   $files = Get-ChildItem -Path $DirToCompress -Exclude $DirtoExclude
   $ZipFileResult ="$(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot/testbot.zip"
   Compress-Archive -Path $files -DestinationPath $ZipFileResult
  displayName: 'Compress Bot Source Code'

- task: AzureCLI@1
  displayName: 'Create Direct Line'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: |
     call az webapp deployment source config-zip --resource-group "$(TestBotName)" --name "$(TestBotName)" --src "$(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot/testbot.zip"
     
     call az bot directline create -n "$(TestBotName)" -g "$(TestBotName)" > "$(System.DefaultWorkingDirectory)/libraries/functional-tests/functionaltestbot/DirectLineCreate.json"

- powershell: |
   $json = Get-Content '$(System.DefaultWorkingDirectory)\libraries\functional-tests\functionaltestbot\DirectLineCreate.json' | Out-String | ConvertFrom-Json
   
   $key = $json.properties.properties.sites.key
   
   echo "##vso[task.setvariable variable=DIRECT_LINE_KEY;]$key"

  displayName: 'Get Direct Line Keys'

- task: NodeTool@0
  displayName: 'Use Node 10x'
  inputs:
    versionSpec: 10.15.3


- task: Npm@1
  displayName: 'npm install'
  inputs:
    verbose: false

- task: Npm@1
  displayName: 'npm functional-test'
  inputs:
    command: custom
    verbose: false
    customCommand: 'run functional-test'

- task: AzureCLI@1
  displayName: 'Delete Resource Group'
  inputs:
    azureSubscription: '$(AzureSubscription)'
    scriptLocation: inlineScript
    inlineScript: 'call az group delete -n "$(TestBotName)" --yes'
  condition: always()
